import numpy as np
import matplotlib.pyplot as plt

data = [-8.88350706, -9.54790908, -9.81618396, -9.65970291, -9.09402777,
        -8.20439483, -7.24656136, -6.72798318, -7.04896877, -7.95054413,
        -8.89184805, -9.55264659, -9.81672958, -9.65600767, -9.08649683,
        -8.19451195, -7.23820386, -6.72685688, -7.05604775, -7.96053052,
        -8.9001593, -9.55734378, -9.81723242, -9.65227106, -9.07893227,
        -8.18462003, -7.22989105, -6.72582208, -7.06318634, -7.9705178,
        -8.90844062, -9.56200061, -9.81769248, -9.64849311, -9.07133423]

# Заданные данные
x = np.array([i for i in range(len(data))])
y = np.array([-8.88350706, -9.54790908, -9.81618396, -9.65970291, -9.09402777,
              -8.20439483, -7.24656136, -6.72798318, -7.04896877, -7.95054413,
              -8.89184805, -9.55264659, -9.81672958, -9.65600767, -9.08649683,
              -8.19451195, -7.23820386, -6.72685688, -7.05604775, -7.96053052,
              -8.9001593, -9.55734378, -9.81723242, -9.65227106, -9.07893227,
              -8.18462003, -7.22989105, -6.72582208, -7.06318634, -7.9705178,
              -8.90844062, -9.56200061, -9.81769248, -9.64849311, -9.07133423])

# Проведем полиномиальную интерполяцию
coefficients = np.polyfit(x, y, deg=30)
p = np.poly1d(coefficients)

# Зададим точки для плавной кривой приближения
x_smooth = np.linspace(0, len(data) - 1, 1000)
y_smooth = p(x_smooth)


y_smooth = y_smooth[69:939]
x_smooth = x_smooth[69:939]

# Отобразим результаты
# plt.scatter(x, y, label='Исходные данные')
# plt.plot(x_smooth, y_smooth, label='Аппроксимация')
# plt.show()
